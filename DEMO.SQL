-- VAMOS A CREAR UN USUARIO LLAMANDO A AL PROCEDIMIENTO CREAR_USUARIO

-- DESDE PLYTIX
DELETE FROM USUARIO WHERE ID = 888; -- BORRAMOS EL USUARIO SI EXISTE

DECLARE
    v_usuario USUARIO%ROWTYPE;
BEGIN
    -- Simulamos datos de entrada
    v_usuario.Id := 888;
    v_usuario.NombreUsuario := 'pepe';
    v_usuario.NombreCompleto := 'Pepe Perezz';
    v_usuario.Avatar := 'https://example.com/avatar.jpg';
    v_usuario.CorreoElectronico := 'pp@example.com';
    v_usuario.Telefono := 123456789;
    v_usuario.Cuenta_Id := 1;
    v_usuario.Cuenta_Dueno := NULL;

    -- Llamamos al procedimiento con el usuario, el rol deseado y una contraseña
    PKG_ADMIN_PRODUCTOS.P_CREAR_USUARIO(
        p_usuario => v_usuario,
        p_rol => 'ROL_USUARIO',
        p_password => 'PRUEBA'
    );
END;
/

SELECT * FROM USUARIO WHERE ID = 888;
GRANT CONNECT TO PEPE_PLT;

-- NOS CONECTAMOS COMO PEPE_PLT

-- COMPROBAMOS QUE SOLO PUEDE ACCEDER A LAS TABLAS DE SU PROPIA CUENTA
SELECT * FROM PRODUCTO;
SELECT * FROM PLAN;

-- 8) P_ACTUALIZAR_PRODUCTOS -> DEMO

-- DESDE PLYTIX
-- PRIMERO VEMOS QUE PRODUCTOS HAY EN PRODUCTOS_EXT Y NO EN LA TABLA PRODUCTO

-- BORRAMOS DE LA TABLA PRODUCTO, UN PRODUCTO QUE NO SEA DE LA CUENTA DE PEPE_PLT
SELECT *
FROM PRODUCTOS_EXT pe
WHERE NOT EXISTS (
    SELECT 1
    FROM PRODUCTO p
    WHERE p.SKU = pe.SKU  -- Correlación con la fila externa
);


-- AHORA EJECUTAMOS EL PROCEDIMIENTO DESDE PEPE_PLT
BEGIN
    PLYTIX.PKG_ADMIN_PRODUCTOS.P_ACTUALIZAR_PRODUCTOS(2);
    DBMS_OUTPUT.PUT_LINE('TERMINADO');
END;
/

-- COMPROBAMOS QUE SE HA INSERTADO EL PRODUCTO EN LA TABLA PRODUCTO
SELECT *
FROM PRODUCTOS_EXT pe
WHERE NOT EXISTS (
    SELECT 1
    FROM PRODUCTO p
    WHERE p.SKU = pe.SKU  -- Correlación con la fila externa
);

-- VEMOS QUE NO YA QUE ESE PRODUCTO NO ES DE LA CUENTA DE PEPE_PLT

-- AHORA BORRAMOS UN PRODUCTO QUE PERTENECE A LA CUENTA DE PEPE_PLT
BEGIN
    PLYTIX.PKG_ADMIN_PRODUCTOS.P_ELIMINAR_PRODUCTO_Y_ASOCIACIONES(124,2);
    DBMS_OUTPUT.PUT_LINE('TERMINADO');
END;
/

-- AHORA COMPROBAMOS QUE ESE PRODUCTO ESTÁ EN LA TABLA EXTERNA, PERO NO EN LA TABLA PRODUCTO
SELECT *
FROM PRODUCTOS_EXT pe
WHERE NOT EXISTS (
    SELECT 1
    FROM PRODUCTO p
    WHERE p.SKU = pe.SKU  -- Correlación con la fila externa
);

-- AHORA VAMOS A LLAMAR AL PROCEDIMIENTO P_ACTUALIZAR_PRODUCTOS PARA QUE SE ACTUALICE LA TABLA PRODUCTO
BEGIN
    PLYTIX.PKG_ADMIN_PRODUCTOS.P_ACTUALIZAR_PRODUCTOS(2);
    DBMS_OUTPUT.PUT_LINE('TERMINADO');
END;
/

-- VEMOS QUE EL PRODUCTO AHORA SÍ ESTÁ EN LA TABLA PRODUCTO
SELECT * FROM PRODUCTO WHERE SKU = SKU_DEL_PRODUCTO_INSERTADO; -- VEMOS QUE AHORA SI QUE EXISTE EL PRODUCTO EN LA TABLA PRODUCTO

-- VAMOS AHORA A COMPROBAR SI CAMBIAMOS EL NOMBRE DEL PRODUCTO EN LA TABLA PRODUCTO, CUANDO LLAMEMOS AL PROCEDIMIENTO, SE ACTUALIZA AL NOMBRE DE LA TABLA PRODUCTOS_EXT
UPDATE PRODUCTO SET NOMBRE = 'NUEVO NOMBRE' WHERE SKU = 'SKU DEL PRODUCTO QUE NO EXISTE';
COMMIT;

BEGIN
    PLYTIX.PKG_ADMIN_PRODUCTOS.P_ACTUALIZAR_PRODUCTOS(2);
    DBMS_OUTPUT.PUT_LINE('TERMINADO');
END;

SELECT * FROM PRODUCTO WHERE SKU = 'SKU DEL PRODUCTO QUE NO EXISTE'; -- VEMOS QUE AHORA SI QUE NOS DEVUELVE EL PRODUCTO CON EL NOMBRE ACTUALIZADO

-- AHORA VAMOS A TENER UN PRODUCTO EN LA TABLA PRODUCTO QUE NO ESTÁ EN PRODUCTOS_EXT, ESTO DEBERIA ELIMINARLO DE LA TABLA PRODUCTO
-- PRIMERO INSERTAMOS UN PRODUCTO EN LA TABLA PRODUCTO QUE NO ESTÁ EN PRODUCTOS_EXT
INSERT INTO PRODUCTO VALUES(888, 'SKU_777', 'CAMISETA REAL MADRID', NULL, 'CAMISETA MADRID', TO_DATE('29/05/2024', 'DD/MM/YYYY'), NULL, 2, 'S');
COMMIT;

SELECT * FROM PRODUCTO WHERE GTIN = 888;

BEGIN
    PLYTIX.PKG_ADMIN_PRODUCTOS.P_ACTUALIZAR_PRODUCTOS(2);
    DBMS_OUTPUT.PUT_LINE('TERMINADO');
END;

SELECT * FROM PRODUCTO WHERE GTIN = 888; -- VEMOS QUE NO NOS DEVUELVE NADA, YA QUE EL PRODUCTO SE HA ELIMINADO